{"version":3,"file":"js/986.f45b869c.js","mappings":"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","sources":["webpack://lite/./src/views/coll/pics.vue","webpack://lite/./src/bridge/collection/reg.js","webpack://lite/./src/bridge/collection/insert.js","webpack://lite/src/views/coll/pics.vue","webpack://lite/./src/views/coll/pics.vue?cbde","webpack://lite/./src/views/coll/pics.vue?3446","webpack://lite/./src/bridge/collection/info.js","webpack://lite/./src/bridge/media/list.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('lay-header',{attrs:{\"showBack\":true,\"tBarColor\":\"#FFFFFF\",\"txtRight\":_vm.$t('common.done'),\"txtTitle\":_vm.$t('collection.pics.title'),\"onRight\":_vm.onClickActionComp}},[_c('v-layout',{staticClass:\"lay-body\",attrs:{\"column\":\"\"}},[_c('span',{staticClass:\"txt-cnt pt-1 pb-4 px-5\",staticStyle:{\"overflow-wrap\":\"'everything'\"}},[_vm._v(_vm._s(_vm.$t(\"collection.pics.desc\", { count: _vm.selectItems.length, title: _vm.title })))]),_c('v-layout',{staticClass:\"flex-grow-0 pb-5\",attrs:{\"wrap\":\"\",\"row\":\"\"}},_vm._l((_vm.items),function(item,index){return _c('c-pic',{key:index,attrs:{\"editMode\":true,\"src\":item.thumbName + `?${_vm.filterVer}`,\"isVideo\":item.fileType == 'VIDEO',\"duration\":item.videoTime,\"select\":_vm.selectItems.indexOf(item.mediaId) > -1\n            ? _vm.selectItems.indexOf(item.mediaId) + 1\n            : null,\"isLike\":item.likeYn == 'Y',\"isFilter\":item.filterd == '1',\"isMemo\":item.memo.title || item.memo.memo,\"onClick\":() => _vm.onClickActionSelect(item.mediaId)}})}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import uuid from \"uuid\";\nimport nativeBridge from \"@/plugins/nativeBridge\";\nimport { getDeviceUuid } from \"@/plugins/Const\";\nconst bridge = {\n    request: async (title) => {\n        let retData = {\n            isSuccess: false,\n            errorMsg: '',\n            data: null,\n        };\n        let query = `   \n            INSERT INTO \n                TB_COLLECTION\n            VALUES (\n                NULL,\n                '${getDeviceUuid()}',\n                '${title}',\n                0,\n                0,\n                strftime('%Y%m%d%H%M%S', 'now', 'localtime'),\n                0\n            ) \n        `\n        try {\n            var res = await new Promise((resolve, reject) => {\n                const callbackUUID = `API_GETINFO_CALLBACK_${uuid().replace(/-/gi, \"\")}`;\n                nativeBridge.sqlite(JSON.stringify({ cmd: \"runQuery\", query: query }), callbackUUID)\n                window[`${callbackUUID}`] = (value) => {\n                    try {\n                        if (value) {\n                            resolve(value);\n                        } else {\n                            reject();\n                        }\n                    } catch (error) {\n                        reject(error);\n                    }\n                    delete window[`${callbackUUID}`];\n                };\n            });\n            if(JSON.parse(res).result) {\n                return new Promise((resolve, reject) => {\n                    let q = `\n                        SELECT \n                            collectionId \n                        FROM \n                            TB_COLLECTION \n                        WHERE \n                            deleted = 0 \n                        ORDER BY \n                            collectionId DESC \n                        LIMIT 1\n                    `\n                    const callbackUUID = `API_GETID_CALLBACK_${uuid().replace(/-/gi, \"\")}`;\n                    nativeBridge.sqlite(JSON.stringify({ cmd: \"selectQuery\", query: q }), callbackUUID)\n                    window[`${callbackUUID}`] = (value) => {\n                        try {\n                            if (value) {\n                                const ret = JSON.parse(value);\n                                retData.isSuccess = ret.result\n                                retData.errorMsg = ret.error\n                                retData.data = ret.data && ret.data.length > 0 ? ret.data[0] : ret.data\n                                resolve(retData);\n                            } else {\n                                reject();\n                            }\n                        } catch (error) {\n                            reject(error);\n                        }\n                        delete window[`${callbackUUID}`];\n                    };\n                })\n            } else {\n                throw 'error'\n            }\n        } catch (error) {\n            throw error\n        }\n    }\n}\nexport default bridge","import uuid from \"uuid\";\nimport nativeBridge from \"@/plugins/nativeBridge\";\nconst bridge = {\n    request: async (collectionId, mediaIds) => {\n        let retData = {\n            isSuccess: false,\n            errorMsg: '',\n            data: null,\n        };\n        let insert = ``\n        mediaIds.forEach(element => {\n            if (insert) {\n                insert += ` UNION `\n            }\n            insert += `\n                SELECT\n                    NULL,\n                    ${collectionId},\n                    ${element},\n                    0,\n                    strftime('%Y%m%d%H%M%S', 'now', 'localtime'),\n                    0\n            `\n        });\n\n        let query = `   \n            INSERT INTO \n                TB_COLLECTION_MEDIA\n            ${insert}\n        `\n        return new Promise((resolve, reject) => {\n            const callbackUUID = `API_GETINFO_CALLBACK_${uuid().replace(/-/gi, \"\")}`;\n            nativeBridge.sqlite(JSON.stringify({ cmd: \"runQuery\", query: query }), callbackUUID)\n            window[`${callbackUUID}`] = (value) => {\n                try {\n                    if (value) {\n                        const ret = JSON.parse(value);\n                        retData.isSuccess = ret.result\n                        retData.errorMsg = ret.error\n                        retData.data = ret.data\n                        resolve(retData);\n                    } else {\n                        reject();\n                    }\n                } catch (error) {\n                    reject(error);\n                }\n                delete window[`${callbackUUID}`];\n            };\n        });\n    }\n}\nexport default bridge","<template>\n  <lay-header\n    :showBack=\"true\"\n    tBarColor=\"#FFFFFF\"\n    :txtRight=\"$t('common.done')\"\n    :txtTitle=\"$t('collection.pics.title')\"\n    :onRight=\"onClickActionComp\"\n  >\n    <v-layout column class=\"lay-body\">\n      <span class=\"txt-cnt pt-1 pb-4 px-5\" style=\"overflow-wrap: 'everything';\">{{\n        $t(\"collection.pics.desc\", { count: selectItems.length, title: title })\n      }}</span>\n      <v-layout wrap row class=\"flex-grow-0 pb-5\">\n        <c-pic\n          v-for=\"(item, index) in items\"\n          :editMode=\"true\"\n          :key=\"index\"\n          :src=\"item.thumbName + `?${filterVer}`\"\n          :isVideo=\"item.fileType == 'VIDEO'\"\n          :duration=\"item.videoTime\"\n          :select=\"\n            selectItems.indexOf(item.mediaId) > -1\n              ? selectItems.indexOf(item.mediaId) + 1\n              : null\n          \"\n          :isLike=\"item.likeYn == 'Y'\"\n          :isFilter=\"item.filterd == '1'\"\n          :isMemo=\"item.memo.title || item.memo.memo\"\n          :onClick=\"() => onClickActionSelect(item.mediaId)\"\n        />\n      </v-layout>\n    </v-layout>\n  </lay-header>\n</template>\n\n<script>\nimport CPic from \"../../components/cPic.vue\";\nimport MEDIA_LIST from \"@/bridge/media/list\";\nimport COLLECTION_REG from \"@/bridge/collection/reg\";\nimport COLLECTION_INSERT from \"@/bridge/collection/insert\";\nimport COLL_INFO from \"@/bridge/collection/info\";\nexport default {\n  props: [\"title\", \"seq\"],\n  data() {\n    return {\n      isGetingItems: false,\n      isEditMode: false,\n      selectItems: [],\n      items: [],\n      pageNo: 1,\n      allCount: 0,\n      gallInfo: null,\n    };\n  },\n  computed: {},\n  watch: {\n    isEditMode() {\n      this.selectItems.splice(0, this.selectItems.length);\n    },\n  },\n  created() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  },\n  mounted() {\n    if (this.seq) {\n      this.getData();\n    } else {\n      this.getItems();\n    }\n  },\n  destroyed() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  },\n  methods: {\n    async getData() {\n      if (this.isGetingItems) {\n        return;\n      }\n      this.isGetingItems = true;\n      let res = await COLL_INFO.request(this.seq);\n      this.isGetingItems = false;\n      if (res.isSuccess) {\n        this.title =\n          res.data.favorite == 1\n            ? this.$t(\"collection.like\")\n            : res.data.collectionName;\n        this.getItems();\n      } else {\n        this.showToast(this.$t(\"error.error\"), false, false);\n        this.$router.go(-1);\n      }\n    },\n    async getItems(page = 1) {\n      if (this.isGetingItems) {\n        return;\n      }\n      this.isGetingItems = true;\n      await MEDIA_LIST.request(page, 20, null, this.seq)\n        .then((data) => {\n          this.isGetingItems = false;\n          this.pageNo = page;\n          if (page == 1) {\n            this.items.splice(0, this.items.length);\n          }\n          this.allCount = data.allCount;\n          this.items.push(...data.list);\n\n          this.items.forEach(element => {\n            try {\n              this.$set(element, 'memo', JSON.parse(element.memo.replace(/\\n/g, \"\\\\n\")))\n            } catch (error) {\n            }\n          });\n\n          setTimeout(() => {\n            var target = document.children[0];\n            this.checkNext(target);\n          }, 300);\n        })\n        .catch(() => {\n          this.isGetingItems = false;\n        });\n    },\n    handleScroll(event) {\n      let target = event.target.children[0];\n      this.checkNext(target);\n    },\n    checkNext(target) {\n      if (\n        this.items.length < this.allCount &&\n        target &&\n        target.scrollHeight - target.clientHeight - 80 < target.scrollTop\n      ) {\n        this.getItems(this.pageNo + 1);\n      }\n    },\n    async insertCollection(cId) {\n      if (this.selectItems && this.selectItems.length) {\n        await COLLECTION_INSERT.request(cId, this.selectItems)\n          .then((data) => {\n            this.isGetingItems = false;\n            if (data.isSuccess) {\n              this.showToast(this.$t(\"error.save-comp\"), true, false);\n              this.$router.go(this.seq ? -1 : -2);\n            } else {\n              this.showToast(this.$t(\"error.error\"), false, false);\n            }\n          })\n          .catch(() => {\n            this.isGetingItems = false;\n          });\n      } else {\n        this.isGetingItems = false;\n        this.showToast(this.$t(\"error.save-comp\"), true, false);\n        this.$router.go(this.seq ? -1 : -2);\n      }\n    },\n    async onClickActionComp() {\n      if (this.isGetingItems) {\n        return;\n      }\n      this.isGetingItems = true;\n      if (this.seq) {\n        this.insertCollection(this.seq);\n      } else {\n        await COLLECTION_REG.request(this.title)\n          .then((data) => {\n            if (data.isSuccess) {\n              this.insertCollection(data.data.collectionId);\n            } else {\n              this.isGetingItems = false;\n            }\n          })\n          .catch(() => {\n            this.isGetingItems = false;\n          });\n      }\n    },\n    onClickActionSelect(mediaId) {\n      if (this.selectItems.indexOf(mediaId) > -1) {\n        this.selectItems.splice(this.selectItems.indexOf(mediaId), 1);\n      } else {\n        this.selectItems.push(mediaId);\n      }\n    },\n  },\n  components: { CPic },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/sass/app.scss\";\n.lay-body {\n  .txt-cnt {\n    flex: none;\n    font-style: normal;\n    font-weight: 700;\n    font-size: pxToRem(13px);\n    letter-spacing: -0.01em;\n    color: #000000;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./pics.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./pics.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./pics.vue?vue&type=template&id=570fd43e&scoped=true\"\nimport script from \"./pics.vue?vue&type=script&lang=js\"\nexport * from \"./pics.vue?vue&type=script&lang=js\"\nimport style0 from \"./pics.vue?vue&type=style&index=0&id=570fd43e&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"570fd43e\",\n  null\n  \n)\n\nexport default component.exports","import uuid from \"uuid\";\nimport nativeBridge from \"@/plugins/nativeBridge\";\n\nconst bridge = {\n    request: async (seq) => {\n        let retData = {\n            isSuccess: false,\n            errorMsg: '',\n            data: null,\n        };\n        let query = `   \n            SELECT \n                *\n            FROM \n                TB_COLLECTION \n            WHERE\n                collectionId = ${seq}\n        `\n        return new Promise((resolve, reject) => {\n            const callbackUUID = `API_GETINFO_CALLBACK_${uuid().replace(/-/gi, \"\")}`;\n            nativeBridge.sqlite(JSON.stringify({ cmd: \"selectQuery\", query: query }), callbackUUID)\n            window[`${callbackUUID}`] = (value) => {\n                try {\n                    if (value) {\n                        const ret = JSON.parse(value);\n                        retData.isSuccess = ret.result\n                        retData.errorMsg = ret.error\n                        retData.data = ret.data && ret.data.length > 0 ? ret.data[0] : null\n                        resolve(retData);\n                    } else {\n                        reject();\n                    }\n                } catch (error) {\n                    reject(error);\n                }\n                delete window[`${callbackUUID}`];\n            };\n        });\n    }\n}\nexport default bridge","import uuid from \"uuid\";\nimport nativeBridge from \"@/plugins/nativeBridge\";\nimport allCount from \"../count\";\n\nconst bridge = {\n    request: async (pageNo = 1, pageSize = 20, equals, excColId) => {\n        let retData = {\n            isSuccess: false,\n            errorMsg: '',\n            list: null,\n            allCount: 0\n        };\n        let cq = `\n            SELECT \n                COUNT(*) AS cnt \n            FROM \n                TB_MEDIA \n            WHERE \n                deleted = 0\n        `\n        let query = `\n            SELECT \n               *\n            FROM \n               (\n                    SELECT \n                        m.*,\n                        CASE WHEN(COUNT(cm.collectionMediaId) > 0) THEN 'Y' ELSE 'N' END as likeYn\n                    FROM \n                        TB_MEDIA m\n                    LEFT JOIN\n                        TB_COLLECTION_MEDIA cm\n                    ON\n                        m.mediaId = cm.mediaId \n                        AND cm.collectionId = 1 \n                        AND cm.deleted = 0\n                    GROUP BY\n                        m.mediaId\n                )\n            WHERE \n                deleted = 0\n        `\n\n        if (equals && equals.length) {\n            equals.forEach(element => {\n                query += ` AND ${element.key} = '${element.val}' `\n                cq += ` AND ${element.key} = '${element.val}' `\n            });\n        }\n\n        if (excColId) {\n            let eq = `\n                AND mediaId NOT IN (\n                    SELECT \n                        mediaId\n                    FROM\n                        TB_COLLECTION_MEDIA\n                    WHERE \n                        deleted = 0\n                    AND \n                        collectionId = ${excColId}\n                )\n            `\n            query += eq;\n            cq += eq;\n        }\n        query += `   \n            ORDER BY \n                createDate DESC\n            LIMIT ${pageSize} OFFSET ${pageSize * (pageNo - 1)}\n        `\n        try {\n            retData.allCount = await allCount.request(cq, \"cnt\")\n        } catch (error) {\n            return Promise.reject(error)\n        }\n        return new Promise((resolve, reject) => {\n            const callbackUUID = `API_GETLIST_CALLBACK_${uuid().replace(/-/gi, \"\")}`;\n            nativeBridge.sqlite(JSON.stringify({ cmd: \"selectQuery\", query: query }), callbackUUID)\n            window[`${callbackUUID}`] = (value) => {\n                try {\n                    if (value) {\n                        const ret = JSON.parse(value);\n                        retData.isSuccess = ret.result\n                        retData.errorMsg = ret.error\n                        retData.list = ret.data\n                        resolve(retData);\n                    } else {\n                        reject();\n                    }\n                } catch (error) {\n                    reject(error);\n                }\n                delete window[`${callbackUUID}`];\n            };\n        });\n    }\n}\nexport default bridge"],"names":["_c","_self","attrs","_vm","onClickActionComp","staticStyle","title","staticClass","index","item","videoTime","indexOf","selectItems","likeYn","memo","onClickActionSelect","staticRenderFns","bridge","request","async","retData","isSuccess","errorMsg","data","query","getDeviceUuid","res","Promise","resolve","reject","callbackUUID","uuid","replace","nativeBridge","sqlite","JSON","stringify","cmd","window","value","error","parse","result","q","ret","length","collectionId","mediaIds","insert","forEach","element","props","isGetingItems","isEditMode","items","pageNo","allCount","gallInfo","computed","watch","splice","created","addEventListener","handleScroll","mounted","seq","getData","getItems","destroyed","removeEventListener","methods","COLL_INFO","favorite","$t","collectionName","showToast","$router","go","page","MEDIA_LIST","then","push","list","$set","setTimeout","target","document","children","checkNext","catch","event","scrollHeight","clientHeight","scrollTop","insertCollection","cId","COLLECTION_INSERT","COLLECTION_REG","mediaId","components","CPic","component","render","pageSize","equals","excColId","cq","key","val","eq"],"sourceRoot":""}